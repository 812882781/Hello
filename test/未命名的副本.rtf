{\rtf1\ansi\ansicpg936\cocoartf2511
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset134 STSongti-SC-Regular;\f1\froman\fcharset0 TimesNewRomanPSMT;\f2\froman\fcharset0 Times-Roman;
\f3\fnil\fcharset0 STIXGeneral-Regular;\f4\fmodern\fcharset0 CourierNewPSMT;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red0\green0\blue255;\red255\green255\blue255;
\red15\green112\blue1;\red19\green120\blue72;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;\cssrgb\c0\c0\c100000;\cssrgb\c100000\c100000\c100000;
\cssrgb\c0\c50196\c0;\cssrgb\c3529\c53333\c35294;}
\paperw11900\paperh16840\margl1440\margr1440\vieww28600\viewh18000\viewkind0
\deftab720
\pard\pardeftab720\sl420\sa240\partightenfactor0

\f0\fs29\fsmilli14667 \cf2 \expnd0\expndtw0\kerning0
\'bb\'fa\'c6\'f7\'d1\'a7\'cf\'b0\'bf\'c9\'d2\'d4\'b7\'d6\'ce\'aa\'d3\'d0\'bc\'e0\'b6\'bd\'d1\'a7\'cf\'b0
\f1 (Supervised Learning)
\f0 \'a1\'a2\'ce\'de\'bc\'e0\'b6\'bd\'d1\'a7\'cf\'b0
\f1 (Unsupervised Learning)
\f0 \'ba\'cd\'c7\'bf\'bb\'af\'d1\'a7\'cf\'b0
\f1 (Reinforcement Learning) 
\f0\fs24 \'a1\'a3
\fs29\fsmilli14667 \
\'b3\'a3\'bc\'fb\'b5\'c4\'d3\'d0\'bc\'e0\'b6\'bd\'d1\'a7\'cf\'b0\'d3\'d0\'cf\'df\'d0\'d4\'bb\'d8\'b9\'e9\'a3\'ac\'c2\'df\'bc\'ad\'bb\'d8\'b9\'e9\'a3\'ac\'d6\'a7\'b3\'d6\'cf\'f2\'c1\'bf\'bb\'fa\'a3\'ac\'cb\'e6\'bb\'fa\'c9\'ad\'c1\'d6\'b5\'c8\'a1\'a3 \
\'b3\'a3\'bc\'fb\'b5\'c4\'ce\'de\'bc\'e0\'b6\'bd\'d1\'a7\'cf\'b0\'cb\'e3\'b7\'a8\'d3\'d0\'d7\'d4\'b1\'e0\'c2\'eb\'c6\'f7\'a3\'ac\'c9\'fa\'b3\'c9\'b6\'d4\'bf\'b9\'cd\'f8\'c2\'e7\'b5\'c8\'a1\'a3 \
\'b3\'a3\'bc\'fb\'b5\'c4\'c7\'bf\'bb\'af\'d1\'a7\'cf\'b0\'cb\'e3\'b7\'a8\'d3\'d0 
\f1 DQN
\f0 \'a3\'ac
\f1 PPO 
\f0 \'b5\'c8 
\f2\fs24 \
\pard\pardeftab720\sl340\sa240\partightenfactor0

\f1\fs29\fsmilli14667 \cf2 1958 
\f0 \'c4\'ea\'a3\'ac\'c3\'c0\'b9\'fa\'d0\'c4\'c0\'ed\'d1\'a7\'bc\'d2 
\f1 Frank Rosenblatt 
\f0 \'cc\'e1\'b3\'f6\'c1\'cb\'b5\'da\'d2\'bb\'b8\'f6\'bf\'c9\'d2\'d4\'d7\'d4\'b6\'af\'d1\'a7\'cf\'b0\'c8\'a8\'d6\'d8\'b5\'c4\'c9\'f1\'be\'ad\'d4\'aa\'c4\'a3 \'d0\'cd\'a3\'ac\'b3\'c6\'ce\'aa\'b8\'d0\'d6\'aa\'bb\'fa
\f1 (Perceptron)
\f0 \'a3\'ac\
\pard\pardeftab720\sl420\sa240\partightenfactor0
\cf2 \'b7\'b4\'cf\'f2\'b4\'ab\'b2\'a5\'cb\'e3\'b7\'a8
\f1 (Backpropagation
\f0 \'a3\'ac\'bc\'f2\'b3\'c6 
\f1 BP 
\f0 \'cb\'e3\'b7\'a8
\f1 ) 
\f2\fs24 \

\f0\fs29\fsmilli14667 \'d6\'a7\'b3\'d6\'cf\'f2\'c1\'bf\'bb\'fa \'d3\'b5\'d3\'d0\'d1\'cf\'b8\'f1\'b5\'c4\'c0\'ed\'c2\'db\'bb\'f9\'b4\'a1\'a3\'ac\'d0\'e8\'d2\'aa\'b5\'c4\'d1\'f9\'b1\'be\'ca\'fd\'c1\'bf\'bd\'cf\'c9\'d9\'a3\'ac\'cd\'ac\'ca\'b1\'d2\'b2\'be\'df\'d3\'d0\'c1\'bc\'ba\'c3\'b5\'c4\'b7\'ba\'bb\'af\'c4\'dc\'c1\'a6\'a3\'ac 
\f2\fs24 \

\f0\fs29\fsmilli14667 \'cf\'df\'d0\'d4\'d5\'fb\'c1\'f7\'b5\'a5\'d4\'aa
\f1 (Rectified Linear Unit, ReLU)
\f0 \'bc\'a4\'bb\'ee\'ba\'af\'ca\'fd 
\f2\fs24 \
\pard\pardeftab720\sl340\sa240\partightenfactor0

\f1\fs29\fsmilli14667 \cf2 Dropout 
\f0 \'bc\'bc\'ca\'f5\'b7\'c0\'d6\'b9\'b9\'fd\'c4\'e2\'ba\'cf 
\f2\fs24 \
\pard\pardeftab720\sl420\sa240\partightenfactor0

\f0\fs29\fsmilli14667 \cf2 \'c4\'bf\'c7\'b0\'c0\'b4\'bf\'b4\'a3\'ac
\f1 TensorFlow 
\f0 \'ba\'cd 
\f1 PyTorch 
\f0 \'bf\'f2\'bc\'dc\'ca\'c7\'d2\'b5\'bd\'e7\'ca\'b9\'d3\'c3\'d7\'ee\'ce\'aa\'b9\'e3\'b7\'ba\'b5\'c4\'c1\'bd\'b8\'f6\'c9\'ee\'b6\'c8\'d1\'a7\'cf\'b0\'bf\'f2\'bc\'dc\'a3\'ac 
\f1 TensorFlow 
\f0 \'d4\'da\'b9\'a4\'d2\'b5\'bd\'e7\'d3\'b5\'d3\'d0\'cd\'ea\'b1\'b8\'b5\'c4\'bd\'e2\'be\'f6\'b7\'bd\'b0\'b8\'ba\'cd\'d3\'c3\'bb\'a7\'bb\'f9\'b4\'a1\'a3\'ac
\f1 PyTorch 
\f0 \'b5\'c3\'d2\'e6\'d3\'da\'c6\'e4\'be\'ab\'bc\'f2\'c1\'e9\'bb\'ee\'b5\'c4\'bd\'d3\'bf\'da \'c9\'e8\'bc\'c6\'a3\'ac\'bf\'c9\'d2\'d4\'bf\'ec\'cb\'d9\'c9\'e8\'bc\'c6\'b5\'f7\'ca\'d4\'cd\'f8\'c2\'e7\'c4\'a3\'d0\'cd\'a3\'ac\'d4\'da\'d1\'a7\'ca\'f5\'bd\'e7\'bb\'f1\'b5\'c3\'ba\'c3\'c6\'c0\'c8\'e7\'b3\'b1\'a1\'a3
\f1 TensorFlow 2 
\f0 \'b7\'a2\'b2\'bc\'ba\'f3\'a3\'ac\'c3\'d6\'b2\'b9 \'c1\'cb 
\f1 TensorFlow 
\f0 \'d4\'da\'c9\'cf\'ca\'d6\'c4\'d1\'b6\'c8\'b7\'bd\'c3\'e6\'b5\'c4\'b2\'bb\'d7\'e3\'a3\'ac\'ca\'b9\'b5\'c3\'d3\'c3\'bb\'a7\'bf\'c9\'d2\'d4\'bc\'c8\'c4\'dc\'c7\'e1\'cb\'c9\'c9\'cf\'ca\'d6 
\f1 TensorFlow 
\f0 \'bf\'f2\'bc\'dc\'a3\'ac\'d3\'d6\'c4\'dc \'ce\'de\'b7\'ec\'b2\'bf\'ca\'f0\'cd\'f8\'c2\'e7\'c4\'a3\'d0\'cd\'d6\'c1\'b9\'a4\'d2\'b5\'cf\'b5\'cd\'b3\'a1\'a3\'b1\'be\'ca\'e9\'d2\'d4 
\f1 TensorFlow 2.0 
\f0 \'b0\'e6\'b1\'be\'d7\'f7\'ce\'aa\'d6\'f7\'d2\'aa\'bf\'f2\'bc\'dc\'a3\'ac\'ca\'b5\'d5\'bd\'b8\'f7\'d6\'d6\'c9\'ee\'b6\'c8 \'d1\'a7\'cf\'b0\'cb\'e3\'b7\'a8\'a1\'a3 
\f2\fs24 \

\f0\fs29\fsmilli14667 \'ce\'d2\'c3\'c7\'d5\'e2\'c0\'ef\'cc\'d8\'b1\'f0\'bd\'e9\'c9\'dc 
\f1 TensorFlow 
\f0 \'d3\'eb 
\f1 Keras 
\f0 \'d6\'ae\'bc\'e4\'b5\'c4\'c1\'aa\'cf\'b5\'d3\'eb\'c7\'f8\'b1\'f0\'a1\'a3
\f1 Keras 
\f0 \'bf\'c9\'d2\'d4\'c0\'ed\'bd\'e2\'ce\'aa\'d2\'bb\'cc\'d7\'b8\'df \'b2\'e3 
\f1 API 
\f0 \'b5\'c4\'c9\'e8\'bc\'c6\'b9\'e6\'b7\'b6\'a3\'ac
\f1 Keras 
\f0 \'b1\'be\'c9\'ed\'b6\'d4\'d5\'e2\'cc\'d7\'b9\'e6\'b7\'b6\'d3\'d0\'b9\'d9\'b7\'bd\'b5\'c4\'ca\'b5\'cf\'d6\'a3\'ac\'d4\'da 
\f1 TensorFlow 
\f0 \'d6\'d0\'d2\'b2\'ca\'b5\'cf\'d6\'c1\'cb\'d5\'e2\'cc\'d7 \'b9\'e6\'b7\'b6\'a3\'ac\'b3\'c6\'ce\'aa 
\f1 tf.keras 
\f0 \'c4\'a3\'bf\'e9\'a3\'ac\'b2\'a2\'c7\'d2 
\f1 tf.keras 
\f0 \'bd\'ab\'d7\'f7\'ce\'aa 
\f1 TensorFlow 2 
\f0 \'b0\'e6\'b1\'be\'b5\'c4\'ce\'a8\'d2\'bb\'b8\'df\'b2\'e3\'bd\'d3\'bf\'da\'a3\'ac\'b1\'dc\'c3\'e2\'b3\'f6 \'cf\'d6\'bd\'d3\'bf\'da\'d6\'d8\'b8\'b4\'c8\'df\'d3\'e0\'b5\'c4\'ce\'ca\'cc\'e2\'a1\'a3\'c8\'e7\'ce\'de\'cc\'d8\'b1\'f0\'cb\'b5\'c3\'f7\'a3\'ac\'b1\'be\'ca\'e9\'d6\'d0 
\f1 Keras 
\f0 \'be\'f9\'d6\'b8\'b4\'fa 
\f1 tf.keras
\f0 \'a1\'a3 \
\
1\'a1\'a2\'bb\'d8\'b9\'e9\'ce\'ca\'cc\'e2\'a3\'ba\
\'c9\'f1\'be\'ad\'d4\'aa\'cf\'df\'d0\'d4\'c4\'a3\'d0\'cd 
\f2\fs24 \

\f0\fs29\fsmilli14667 \'be\'f9\'b7\'bd\'b2\'ee
\f1 (Mean Squared Error
\f0 \'a3\'ac\'bc\'f2\'b3\'c6 
\f1 MSE
\f0 )\'a1\'a3\'cc\'dd\'b6\'c8\'cf\'c2\'bd\'b5\'cb\'e3\'b7\'a8
\f1 (Gradient Descent)
\f0 \'ca\'c7\'c9\'f1\'be\'ad\'cd\'f8\'c2\'e7\'d1\'b5\'c1\'b7\'d6\'d0\'d7\'ee\'b3\'a3\'d3\'c3\'b5\'c4\'d3\'c5\'bb\'af\'cb\'e3\'b7\'a8 \
\pard\pardeftab720\sl420\sa240\partightenfactor0
\cf2 \'b6\'d4\'d3\'da\'d4\'a4\'b2\'e2\'d6\'b5\'ca\'c7\'c1\'ac\'d0\'f8\'b5\'c4\'ca\'b5\'ca\'fd\'b7\'b6\'ce\'a7\'a3\'ac\'bb\'f2 \'d5\'df\'ca\'f4\'d3\'da\'c4\'b3\'d2\'bb\'b6\'ce\'c1\'ac\'d0\'f8\'b5\'c4\'ca\'b5\'ca\'fd\'c7\'f8\'bc\'e4\'a3\'ac\'ce\'d2\'c3\'c7\'b0\'d1\'d5\'e2\'d6\'d6\'ce\'ca\'cc\'e2\'b3\'c6\'ce\'aa\'bb\'d8\'b9\'e9
\f1 (Regression)
\f0 \'ce\'ca\'cc\'e2\'a1\'a3\'cc\'d8\'b1\'f0\'b5\'d8\'a3\'ac\'c8\'e7\'b9\'fb \'ca\'b9\'d3\'c3\'cf\'df\'d0\'d4\'c4\'a3\'d0\'cd\'c8\'a5\'b1\'c6\'bd\'fc\'d5\'e6\'ca\'b5\'c4\'a3\'d0\'cd\'a3\'ac\'c4\'c7\'c3\'b4\'ce\'d2\'c3\'c7\'b0\'d1\'d5\'e2\'d2\'bb\'c0\'e0\'b7\'bd\'b7\'a8\'bd\'d0\'d7\'f6\'cf\'df\'d0\'d4\'bb\'d8\'b9\'e9
\f1 (Linear Regression
\f0 \'a3\'ac \'bc\'f2\'b3\'c6 
\f1 LR)
\f0 \'a3\'ac\'cf\'df\'d0\'d4\'bb\'d8\'b9\'e9\'ca\'c7\'bb\'d8\'b9\'e9\'ce\'ca\'cc\'e2\'d6\'d0\'b5\'c4\'d2\'bb\'d6\'d6\'be\'df\'cc\'e5\'b5\'c4\'ca\'b5\'cf\'d6\'a1\'a3 \
2\'a1\'a2\'b7\'d6\'c0\'e0
\f1 (Classification)
\f0 \'ce\'ca\'cc\'e2 \
\'ca\'fd\'d7\'d6\'b1\'e0\'c2\'eb
\f1 (Number Encoding)
\f0 \'a3\'ba\'b5\'ab\'ca\'c7\'ca\'fd\'d7\'d6\'b1\'e0\'c2\'eb\'d2\'bb\'b8\'f6\'d7\'ee\'b4\'f3\'b5\'c4\'ce\'ca\'cc\'e2\'ca\'c7\'a3\'ac\'ca\'fd\'d7\'d6\'d6\'ae\'bc\'e4\'b4\'e6\'d4\'da\'cc\'ec \'c8\'bb\'b5\'c4\'b4\'f3\'d0\'a1\'b9\'d8\'cf\'b5\'a3\'ac\'b1\'c8\'c8\'e7
\f2 1 < 2 < 3
\f0 \'a3\'ac\'c8\'e7\'b9\'fb 
\f1 1
\f0 \'a1\'a2
\f1 2
\f0 \'a1\'a2
\f1 3 
\f0 \'b7\'d6\'b1\'f0\'b6\'d4\'d3\'a6\'b5\'c4\'b1\'ea\'c7\'a9\'ca\'c7\'c3\'a8\'a1\'a2\'b9\'b7\'a1\'a2\'d3\'e3\'a3\'ac\'cb\'fb\'c3\'c7\'d6\'ae\'bc\'e4\'b2\'a2 \'c3\'bb\'d3\'d0\'b4\'f3\'d0\'a1\'b9\'d8\'cf\'b5\'a3\'ac\'cb\'f9\'d2\'d4\'b2\'c9\'d3\'c3\'ca\'fd\'d7\'d6\'b1\'e0\'c2\'eb\'b5\'c4\'ca\'b1\'ba\'f2\'bb\'e1\'c6\'c8\'ca\'b9\'c4\'a3\'d0\'cd\'c8\'a5\'d1\'a7\'cf\'b0\'b5\'bd\'d5\'e2\'d6\'d6\'b2\'bb\'b1\'d8\'d2\'aa\'b5\'c4\'d4\'bc\'ca\'f8\'a1\'a3 
\f2\fs24 \

\f0\fs29\fsmilli14667 \'c8\'e7\'b9\'fb\'ce\'ef\'cc\'e5\'ca\'f4 \'d3\'da\'b5\'da
\f3 \uc0\u55349 \u56406 
\f0 \'c0\'e0\'b5\'c4\'bb\'b0\'a3\'ac\'c4\'c7\'c3\'b4\'cb\'f7\'d2\'fd\'ce\'aa
\f3 \uc0\u55349 \u56406 
\f0 \'b5\'c4\'ce\'bb\'d6\'c3\'c9\'cf\'c9\'e8\'d6\'c3\'ce\'aa 
\f1 1
\f0 \'a3\'ac\'c6\'e4\'cb\'fb\'ce\'bb\'d6\'c3\'c9\'e8\'d6\'c3\'ce\'aa 
\f1 0
\f0 \'a3\'ac\'ce\'d2\'c3\'c7\'b0\'d1\'d5\'e2\'d6\'d6\'b1\'e0\'c2\'eb\'b7\'bd\'ca\'bd\'bd\'d0 \'d7\'f6 
\f1 one-hot 
\f0 \'b1\'e0\'c2\'eb
\f1 (
\f0 \'b6\'c0\'c8\'c8\'b1\'e0\'c2\'eb
\f1 )
\f0 \'a1\'a3 
\f2\fs24 \

\f1\fs29\fsmilli14667 \

\f0 \'c4\'a3\'d0\'cd\'c4\'dc\'b9\'bb\'d4\'da\'d0\'c2\'d1\'f9\'b1\'be\'c9\'cf\'d2\'b2\'c4\'dc\'be\'df\'d3\'d0\'c1\'bc\'ba\'c3\'b5\'c4\'b1\'ed\'cf\'d6\'a3\'ac\'bc\'b4\'c4\'a3\'d0\'cd\'b7\'ba\'bb\'af\'c4\'dc\'c1\'a6
\f1 (Generalization Ability)
\f0 \'bd\'cf\'ba\'c3\'a3\'ac\'c4\'c7\'c3\'b4\'ce\'d2\'c3\'c7\'d3\'a6\'b8\'c3\'be\'a1\'bf\'c9\'c4\'dc\'b6\'e0\'b5\'d8\'d4\'f6\'bc\'d3\'ca\'fd\'be\'dd\'bc\'af\'b5\'c4\'b9\'e6\'c4\'a3\'ba\'cd\'b6\'e0\'d1\'f9\'d0\'d4
\f1 (Variance)
\f0 \'a3\'ac\'ca\'b9\'b5\'c3\'ce\'d2\'c3\'c7\'d3\'c3 \'d3\'da\'d1\'a7\'cf\'b0\'b5\'c4\'d1\'b5\'c1\'b7\'ca\'fd\'be\'dd\'bc\'af\'d3\'eb\'d5\'e6\'ca\'b5\'b5\'c4\'ca\'d6\'d0\'b4\'ca\'fd\'d7\'d6\'cd\'bc\'c6\'ac\'b5\'c4\'b7\'d6\'b2\'bc
\f1 (Ground-truth Distribution)
\f0 \'be\'a1\'bf\'c9\'c4\'dc\'b5\'c4\'b1\'c6 \'bd\'fc\'a3\'ac\'d5\'e2\'d1\'f9\'d4\'da\'d1\'b5\'c1\'b7\'ca\'fd\'be\'dd\'bc\'af\'c9\'cf\'c3\'e6\'d1\'a7\'b5\'bd\'c1\'cb\'c4\'a3\'d0\'cd\'c4\'dc\'b9\'bb\'ba\'dc\'ba\'c3\'b5\'c4\'d3\'c3\'d3\'da\'ce\'b4\'bc\'fb\'b9\'fd\'b5\'c4\'ca\'d6\'d0\'b4\'ca\'fd\'d7\'d6\'cd\'bc\'c6\'ac\'b5\'c4\'d4\'a4\'b2\'e2\'a1\'a3 
\f2\fs24 \

\f1\fs29\fsmilli14667  
\f0 \'c4\'bf\'c7\'b0\'b3\'a3\'d3\'c3\'b5\'c4\'c9\'ee\'b6\'c8\'d1\'a7\'cf\'b0\'bf\'f2\'bc\'dc\'a3\'ac\'c8\'e7 
\f1 TensorFlow
\f0 \'a3\'ac
\f1 PyTorch 
\f0 \'b5\'c8\'a3\'ac\'b6\'bc\'bf\'c9\'d2\'d4\'b7\'c7\'b3\'a3\'b7\'bd\'b1\'e3\'b5\'c4\'cd\'a8\'b9\'fd\'ca\'fd\'d0\'d0\
\'b4\'fa\'c2\'eb\'d7\'d4\'b6\'af\'cf\'c2\'d4\'d8\'a1\'a2\'b9\'dc\'c0\'ed\'ba\'cd\'bc\'d3\'d4\'d8 
\f1 MNIST 
\f0 \'ca\'fd\'be\'dd\'bc\'af\'a3\'ac\'b2\'bb\'d0\'e8\'d2\'aa\'ce\'d2\'c3\'c7\'b6\'ee\'cd\'e2\'b1\'e0\'d0\'b4\'b4\'fa\'c2\'eb\'a3\'ac\'ca\'b9\'d3\'c3\'c6\'f0\'c0\'b4\'b7\'c7\'b3\'a3\'b7\'bd \'b1\'e3\'a1\'a3\'ce\'d2\'c3\'c7\'d5\'e2\'c0\'ef\'c0\'fb\'d3\'c3 
\f1 TensorFlow 
\f0 \'d7\'d4\'b6\'af\'d4\'da\'cf\'df\'cf\'c2\'d4\'d8 
\f1 MNIST 
\f0 \'ca\'fd\'be\'dd\'bc\'af\'a3\'ac\'b2\'a2\'d7\'aa\'bb\'bb\'ce\'aa 
\f1 Numpy 
\f0 \'ca\'fd\'d7\'e9\'b8\'f1 \'ca\'bd: 
\f2\fs24 \

\itap1\trowd \taflags1 \trgaph108\trleft-108 \trcbpat4 \trbrdrt\brdrnil \trbrdrl\brdrnil \trbrdrr\brdrnil 
\clvertalc \clcbpat4 \clwWidth15640\clftsWidth3 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrs\brdrw20\brdrcf2 \clbrdrr\brdrnil \clpadt20 \clpadl20 \clpadb20 \clpadr20 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\sl280\sa240\partightenfactor0

\f4 \cf3 import \cf2 os 
\f2 \cell \row

\itap1\trowd \taflags1 \trgaph108\trleft-108 \trcbpat4 \trbrdrl\brdrnil \trbrdrr\brdrnil 
\clvertalc \clcbpat4 \clwWidth15640\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf2 \clbrdrl\brdrnil \clbrdrb\brdrs\brdrw20\brdrcf2 \clbrdrr\brdrnil \clpadt20 \clpadl20 \clpadb20 \clpadr20 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\sl280\sa240\partightenfactor0

\f4 \cf3 import \cf2 tensorflow \cf3 as \cf2 tf \cf5 # 
\f0 \'b5\'bc\'c8\'eb 
\f4 TF 
\f0 \'bf\'e2
\f4 \cf3 from \cf2 tensorflow \cf3 import \cf2 keras \cf5 # 
\f0 \'b5\'bc\'c8\'eb 
\f4 TF 
\f0 \'d7\'d3\'bf\'e2
\f4 \cf3 from \cf2 tensorflow.keras \cf3 import \cf2 layers, optimizers, datasets \cf5 # 
\f0 \'b5\'bc\'c8\'eb 
\f4 TF 
\f0 \'d7\'d3\'bf\'e2
\f4 \cf2 (x, y), (x_val, y_val) = datasets.mnist.load_data() \cf5 # 
\f0 \'bc\'d3\'d4\'d8\'ca\'fd\'be\'dd\'bc\'af
\f4 \cf2 x = \cf6 2\cf2 *tf.convert_to_tensor(x, dtype=tf.float32)/\cf6 255\cf2 .-\cf6 1 \cf5 # 
\f0 \'d7\'aa\'bb\'bb\'ce\'aa\'d5\'c5\'c1\'bf\'a3\'ac\'cb\'f5\'b7\'c5\'b5\'bd
\f4 -1~1 \cf2 y = tf.convert_to_tensor(y, dtype=tf.int32) \cf5 # 
\f0 \'d7\'aa\'bb\'bb\'ce\'aa\'d5\'c5\'c1\'bf 
\f2 \cf2 \cell \row

\itap1\trowd \taflags1 \trgaph108\trleft-108 \trcbpat4 \trbrdrl\brdrnil \trbrdrr\brdrnil 
\clvertalc \clcbpat4 \clwWidth15640\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf2 \clbrdrl\brdrnil \clbrdrb\brdrs\brdrw20\brdrcf2 \clbrdrr\brdrnil \clpadt20 \clpadl20 \clpadb20 \clpadr20 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\sl280\sa240\partightenfactor0

\f4 \cf2 y = tf.one_hot(y, depth=\cf6 10\cf2 ) \cf5 # one-hot
\f0 \'b1\'e0\'c2\'eb
\f4 \cf2 print(x.shape, y.shape)\uc0\u8232 train_dataset = tf.data.Dataset.from_tensor_slices((x, y)) \cf5 # 
\f0 \'b9\'b9\'bd\'a8\'ca\'fd\'be\'dd\'bc\'af\'b6\'d4\'cf\'f3 
\f2 \cf2 \cell \row

\itap1\trowd \taflags1 \trgaph108\trleft-108 \trcbpat4 \trbrdrl\brdrnil \trbrdrt\brdrnil \trbrdrr\brdrnil 
\clvertalc \clcbpat4 \clwWidth15640\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf2 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt20 \clpadl20 \clpadb20 \clpadr20 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\sl280\sa240\partightenfactor0

\f4 \cf2 train_dataset = train_dataset.batch(\cf6 512\cf2 ) \cf5 # 
\f0 \'c5\'fa\'c1\'bf\'d1\'b5\'c1\'b7 
\f2 \cf2 \cell \lastrow\row
\pard\pardeftab720\sl420\sa240\partightenfactor0
\cf2 \

\f0\fs29\fsmilli14667 \'b4\'d3 
\f1 TensorFlow 
\f0 \'d6\'d0\'bc\'d3\'d4\'d8\'b5\'c4 
\f1 MNIST 
\f0 \'ca\'fd\'be\'dd\'cd\'bc\'c6\'ac\'a3\'ac\'ca\'fd\'d6\'b5\'b5\'c4\'b7\'b6\'ce\'a7\'d4\'da
\f2 [0,255]
\f0 \'d6\'ae\'bc\'e4\'a1\'a3\'d4\'da\'bb\'fa\'c6\'f7\'d1\'a7\'cf\'b0\'d6\'d0 \'bc\'e4\'a3\'ac\'d2\'bb\'b0\'e3\'cf\'a3\'cd\'fb\'ca\'fd\'be\'dd\'b5\'c4\'b7\'b6\'ce\'a7\'d4\'da 
\f1 0 
\f0 \'d6\'dc\'ce\'a7\'d0\'a1\'b7\'b6\'ce\'a7\'c4\'da\'b7\'d6\'b2\'bc\'a1\'a3\'cd\'a8\'b9\'fd\'d4\'a4\'b4\'a6\'c0\'ed\'b2\'bd\'d6\'e8\'a3\'ac\'ce\'d2\'c3\'c7\'b0\'d1
\f2 [0,255]
\f0 \'cf\'f1\'cb\'d8\'b7\'b6 \'ce\'a7\'b9\'e9\'d2\'bb\'bb\'af
\f1 (Normalize)
\f0 \'b5\'bd
\f2 [0,1. ]
\f0 \'c7\'f8\'bc\'e4\'a3\'ac\'d4\'d9\'cb\'f5\'b7\'c5\'b5\'bd
\f2 [\uc0\u8722 1,1]
\f0 \'c7\'f8\'bc\'e4\'a3\'ac\'b4\'d3\'b6\'f8\'d3\'d0\'c0\'fb\'d3\'da\'c4\'a3\'d0\'cd\'b5\'c4\'d1\'b5\'c1\'b7\'a1\'a3 \
\'c4\'a3\'d0\'cd\'b5\'c4\'d1\'b5\'c1\'b7\'c4\'bf\'b1\'ea\'ca\'c7\'cd\'a8\'b9\'fd\'d3\'c5\'bb\'af\'cb\'f0\'ca\'a7\'ba\'af\'ca\'fd
\f2 L
\f0 \'c0\'b4\'d5\'d2\'b5\'bd\'d7\'ee\'d3\'c5\'ca\'fd\'d6\'b5\'bd\'e2
\f2 W , 
\f3 \uc0\u55349 \u56451 
\f2  
\f0 \'a3\'ac
\f1  
\f0 \'b6\'d4\'d3\'da\'b7\'d6\'c0\'e0\'ce\'ca\'cc\'e2\'b5\'c4\'ce\'f3\'b2\'ee\'bc\'c6\'cb\'e3\'c0\'b4\'cb\'b5\'a3\'ac\'b8\'fc\'b3\'a3\'bc\'fb\'b5\'c4\'ca\'c7\'b2\'c9\'d3\'c3\'bd\'bb\'b2\'e6\'ec\'d8
\f1 (Cross entropy)
\f0 \'cb\'f0\'ca\'a7\'ba\'af\'ca\'fd\'a3\'ac\'b6\'f8\'b2\'bb\'ca\'c7\'b2\'c9\'d3\'c3\'bb\'d8\'b9\'e9\'ce\'ca\'cc\'e2\'d6\'d0\'bd\'e9\'c9\'dc\'b5\'c4\'be\'f9\'b7\'bd\'b2\'ee\'cb\'f0\'ca\'a7\'ba\'af\'ca\'fd\'a1\'a3\
\'c4\'bf\'c7\'b0\'ce\'d2\'c3\'c7\'cb\'f9\'b2\'c9\'d3\'c3\'b5\'c4\'b6\'e0\'c9\'f1\'be\'ad\'d4\'aa\'c4\'a3\'d0\'cd\'c8\'d4\'ca\'c7\'cf\'df\'d0\'d4\'c4\'a3\'d0\'cd\'a3\'ac\'d3\'c3\'d3\'da\'b7\'d6\'c0\'e0\'ce\'ca\'cc\'e2\'ca\'b1\'a3\'ac\'b1\'ed\'b4\'ef\'c4\'dc\'c1\'a6\'c6\'ab\'c8\'f5\'a3\'ac\'bd\'e2\'be\'f6\'b7\'bd\'b0\'b8\'a3\'ba\'bc\'c8\'c8\'bb\'cf\'df\'d0\'d4\'c4\'a3\'d0\'cd\'b2\'bb\'bf\'c9\'d0\'d0\'a3\'ac\'ce\'d2\'c3\'c7\'bf\'c9\'d2\'d4\'b8\'f8\'cf\'df\'d0\'d4\'c4\'a3\'d0\'cd\'c7\'b6\'cc\'d7\'d2\'bb\'b8\'f6\'b7\'c7\'cf\'df\'d0\'d4\'ba\'af\'ca\'fd\'a3\'ac\'bc\'b4\'bf\'c9\'bd\'ab\'c6\'e4\'d7\'aa\'bb\'bb\'ce\'aa\'b7\'c7 \'cf\'df\'d0\'d4\'c4\'a3\'d0\'cd\'a1\'a3\'ce\'d2\'c3\'c7\'b0\'d1\'d5\'e2\'b8\'f6\'b7\'c7\'cf\'df\'d0\'d4\'ba\'af\'ca\'fd\'b3\'c6\'ce\'aa\'bc\'a4\'bb\'ee\'ba\'af\'ca\'fd
\f1 (Activation function) 
\f0 \'a1\'a3\'b7\'c7\'cf\'df\'d0\'d4\'bc\'a4\'bb\'ee\'ba\'af\'ca\'fd\'a3\'ac\'b1\'c8\'c8\'e7 
\f1 Sigmoid 
\f0 \'ba\'af\'ca\'fd\'a3\'ac
\f1 ReLU 
\f0 \'ba\'af\'ca\'fd\'a1\'a3 
\f1 ReLU 
\f0 \'ba\'af\'ca\'fd\'b7\'c7\'b3\'a3\'bc\'f2\'b5\'a5\'a3\'ac\'bd\'f6\'bd\'f6\'ca\'c7\'d4\'da
\f3 \uc0\u55349 \u56422 
\f2  = 
\f3 \uc0\u55349 \u56421 
\f0 \'d4\'da\'bb\'f9\'b4\'a1\'c9\'cf\'c3\'e6\'bd\'d8\'c8\'a5\'c1\'cb
\f3 \uc0\u55349 \u56421 
\f2  < 0
\f0 \'b5\'c4\'b2\'bf\'b7\'d6\'a3\'ac\'bf\'c9\'d2\'d4\'d6\'b1\'b9\'db\'b5\'d8\'c0\'ed \'bd\'e2\'ce\'aa 
\f1 ReLU 
\f0 \'ba\'af\'ca\'fd\'bd\'f6\'bd\'f6\'b1\'a3\'c1\'f4\'d5\'fd\'b5\'c4\'ca\'e4\'c8\'eb\'b2\'bf\'b7\'dd\'a3\'ac\'c7\'e5\'c1\'e3\'b8\'ba\'b5\'c4\'ca\'e4\'c8\'eb\'a1\'a3\'cb\'e4\'c8\'bb\'bc\'f2\'b5\'a5\'a3\'ac
\f1 ReLU 
\f0 \'ba\'af\'ca\'fd\'c8\'b4\'d3\'d0\'d3\'c5\'c1\'bc\'b5\'c4\'b7\'c7\'cf\'df\'d0\'d4\'cc\'d8\'d0\'d4\'a3\'ac\'b6\'f8\'c7\'d2\'cc\'dd\'b6\'c8\'bc\'c6\'cb\'e3\'bc\'f2\'b5\'a5\'a3\'ac\'d1\'b5\'c1\'b7\'ce\'c8\'b6\'a8\'a3\'ac\'ca\'c7\'c9\'ee\'b6\'c8\'d1\'a7\'cf\'b0\'c4\'a3\'d0\'cd\'ca\'b9\'d3\'c3\'d7\'ee\'b9\'e3\'b7\'ba\'b5\'c4\'bc\'a4\'bb\'ee\'ba\'af\'ca\'fd\'d6\'ae\'d2\'bb\'a1\'a3 \
\'d5\'eb\'b6\'d4\'d3\'da\'c4\'a3\'d0\'cd\'b5\'c4\'b1\'ed\'b4\'ef\'c4\'dc\'c1\'a6\'c6\'ab\'c8\'f5\'b5\'c4\'ce\'ca\'cc\'e2\'a3\'ac\'bf\'c9\'d2\'d4\'cd\'a8\'b9\'fd\'d6\'d8\'b8\'b4\'b6\'d1\'b5\'fe\'b6\'e0\'b4\'ce\'b1\'e4\'bb\'bb\'c0\'b4\'d4\'f6\'bc\'d3\'c6\'e4\'b1\'ed\'b4\'ef\'c4\'dc\'c1\'a6 \'a1\'a3\
\pard\pardeftab720\sl340\sa240\partightenfactor0

\f1 \cf2 (
\f0 \'c7\'b0\'c0\'a1
\f1 )
\f0 \'c9\'f1\'be\'ad\'cd\'f8\'c2\'e7
\f1 (Neural Network)
\f0  \'ca\'e4\'c8\'eb\'b2\'e3\'a1\'aa\'d2\'fe\'b2\'d8\'b2\'e3\'a1\'aa\'ca\'e4\'b3\'f6\'b2\'e3\
\pard\pardeftab720\sl420\sa240\partightenfactor0
\cf2 \'b5\'b1\'cd\'f8\'c2\'e7\'b2\'e3 \'ca\'fd\'d4\'f6\'bc\'d3\'a1\'a2\'ca\'fd\'be\'dd\'cc\'d8\'d5\'f7\'b3\'a4\'b6\'c8\'d4\'f6\'b4\'f3\'a1\'a2\'cc\'ed\'bc\'d3\'b8\'b4\'d4\'d3\'b5\'c4\'b7\'c7\'cf\'df\'d0\'d4\'ba\'af\'ca\'fd\'d6\'ae\'ba\'f3\'a3\'ac\'c4\'a3\'d0\'cd\'b5\'c4\'b1\'ed\'b4\'ef\'ca\'bd\'bd\'ab\'b1\'e4\'b5\'c3\'b7\'c7\'b3\'a3\'b8\'b4 \'d4\'d3\'a3\'ac\'ba\'dc\'c4\'d1\'ca\'d6\'b6\'af\'cd\'c6\'b5\'bc\'b3\'f6\'cc\'dd\'b6\'c8\'b5\'c4\'bc\'c6\'cb\'e3\'b9\'ab\'ca\'bd;\'b6\'f8\'c7\'d2\'d2\'bb\'b5\'a9\'cd\'f8\'c2\'e7\'bd\'e1\'b9\'b9\'b7\'a2\'c9\'fa\'b1\'e4\'b6\'af\'a3\'ac\'cd\'f8\'c2\'e7\'b5\'c4\'ba\'af\'ca\'fd\'c4\'a3\'d0\'cd\'d2\'b2\'cb\'e6 \'d6\'ae\'b7\'a2\'c9\'fa\'b8\'c4\'b1\'e4\'a3\'ac\'d2\'c0\'c0\'b5\'c8\'cb\'b9\'a4\'c8\'a5\'bc\'c6\'cb\'e3\'cc\'dd\'b6\'c8\'b5\'c4\'b7\'bd\'ca\'bd\'cf\'d4\'c8\'bb\'b2\'bb\'bf\'c9\'d0\'d0\'a1\'a3 \'d5\'e2\'b8\'f6\'ca\'b1\'ba\'f2\'be\'cd\'ca\'c7\'c9\'ee\'b6\'c8\'d1\'a7\'cf\'b0\'bf\'f2\'bc\'dc\'b7\'a2\'c3\'f7\'b5\'c4\'d2\'e2\'d2\'e5\'cb\'f9\'d4\'da\'a3\'ac\'bd\'e8\'d6\'fa\'d3\'da\'d7\'d4\'b6\'af\'c7\'f3\'b5\'bc
\f1 (Autograd)
\f0 \'bc\'bc\'ca\'f5\'a3\'ac\'c9\'ee\'b6\'c8\'d1\'a7 \'cf\'b0\'bf\'f2\'bc\'dc\'d4\'da\'bc\'c6\'cb\'e3\'ba\'af\'ca\'fd\'b5\'c4\'cb\'f0\'ca\'a7\'ba\'af\'ca\'fd\'b5\'c4\'b9\'fd\'b3\'cc\'d6\'d0\'a3\'ac\'bb\'e1\'bc\'c7\'c2\'bc\'c4\'a3\'d0\'cd\'b5\'c4\'bc\'c6\'cb\'e3\'cd\'bc\'c4\'a3\'d0\'cd\'a3\'ac\'b2\'a2\'d7\'d4\'b6\'af\'cd\'ea\'b3\'c9\'c8\'ce\'d2\'e2\'b2\'ce\'ca\'fd
\f3 \uc0\u55349 \u57091 
\f0 \'b5\'c4\'c6\'ab\'b5\'bc\'b7\'d6\'b5\'c4\'bc\'c6\'cb\'e3\'a3\'ac\'d3\'c3\'bb\'a7\'d6\'bb\'d0\'e8\'d2\'aa\'b4\'ee\'bd\'a8\'b3\'f6\'cd\'f8\'c2\'e7\'bd\'e1\'b9\'b9\'a3\'ac\'cc\'dd\'b6\'c8\'bd\'ab\'d7\'d4\'b6\'af\'cd\'ea\'b3\'c9\'bc\'c6\'cb\'e3\'ba\'cd\'b8\'fc\'d0\'c2\'a3\'ac\'ca\'b9\'d3\'c3\'c6\'f0\'c0\'b4 \'b7\'c7\'b3\'a3\'b1\'e3\'bd\'dd\'b8\'df\'d0\'a7\'a1\'a3\
3\'a1\'a2
\f1 TensorFlow 
\f0 \'ca\'c7\'d2\'bb\'b8\'f6\'c3\'e6\'cf\'f2\'d3\'da\'c9\'ee\'b6\'c8\'d1\'a7\'cf\'b0\'cb\'e3\'b7\'a8\'b5\'c4\'bf\'c6\'d1\'a7\'bc\'c6\'cb\'e3\'bf\'e2\'a3\'ac\'c4\'da\'b2\'bf\'ca\'fd\'be\'dd\'b1\'a3\'b4\'e6\'d4\'da\'d5\'c5\'c1\'bf
\f1 (Tensor)
\f0 \'b6\'d4 \'cf\'f3\'c9\'cf\'a3\'ac\'cb\'f9\'d3\'d0\'b5\'c4\'d4\'cb\'cb\'e3\'b2\'d9\'d7\'f7
\f1 (Operation, OP)
\f0 \'d2\'b2\'b6\'bc\'ca\'c7\'bb\'f9\'d3\'da\'d5\'c5\'c1\'bf\'b6\'d4\'cf\'f3\'bd\'f8\'d0\'d0\'a1\'a3\'b8\'b4\'d4\'d3\'b5\'c4\'c9\'f1\'be\'ad\'cd\'f8\'c2\'e7\'cb\'e3\'b7\'a8\'b1\'be\'d6\'ca \'c9\'cf\'be\'cd\'ca\'c7\'b8\'f7\'d6\'d6\'d5\'c5\'c1\'bf\'cf\'e0\'b3\'cb\'a1\'a2\'cf\'e0\'bc\'d3\'b5\'c8\'bb\'f9\'b1\'be\'d4\'cb\'cb\'e3\'b2\'d9\'d7\'f7\'b5\'c4\'d7\'e9\'ba\'cf
\f2\fs24 \

\f0\fs29\fsmilli14667 \

\f2\fs24 \
\
\
\pard\pardeftab720\sl340\sa240\partightenfactor0
\cf2 \
\pard\pardeftab720\sl420\sa240\partightenfactor0
\cf2 \
\

\f0\fs29\fsmilli14667  
\f2\fs24 \
\
\
\

\f0\fs29\fsmilli14667 \
\

\f2\fs24 \
\
\
\
\
\
\pard\pardeftab720\sl420\sa240\partightenfactor0
\cf2 \
\
\
\pard\pardeftab720\sl340\sa240\partightenfactor0
\cf2 \
\pard\pardeftab720\sl420\sa240\partightenfactor0
\cf2 \
\
}